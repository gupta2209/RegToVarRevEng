

================================================================
== Vivado HLS Report for 'diffeq'
================================================================
* Date:           Fri Jan 29 09:50:10 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        diffeq
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.510 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        4|        4| 40.000 ns | 40.000 ns |    4|    4|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.51>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%u_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %u) nounwind" [diffeq.c:10]   --->   Operation 6 'read' 'u_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%dx_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %dx) nounwind" [diffeq.c:10]   --->   Operation 7 'read' 'dx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%x_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %x) nounwind" [diffeq.c:10]   --->   Operation 8 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node t1)   --->   "%shl_ln12 = shl i32 %x_read, 2" [diffeq.c:12]   --->   Operation 9 'shl' 'shl_ln12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (2.55ns) (out node of the LUT)   --->   "%t1 = sub i32 %shl_ln12, %x_read" [diffeq.c:12]   --->   Operation 10 'sub' 't1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (8.51ns)   --->   "%mul_ln14 = mul i32 %dx_read, %u_read" [diffeq.c:14]   --->   Operation 11 'mul' 'mul_ln14' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node t4)   --->   "%shl_ln15 = shl i32 %dx_read, 2" [diffeq.c:15]   --->   Operation 12 'shl' 'shl_ln15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (2.55ns) (out node of the LUT)   --->   "%t4 = sub i32 %shl_ln15, %dx_read" [diffeq.c:15]   --->   Operation 13 'sub' 't4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 8.51>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%y_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %y) nounwind" [diffeq.c:10]   --->   Operation 14 'read' 'y_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (8.51ns)   --->   "%t3 = mul i32 %mul_ln14, %t1" [diffeq.c:14]   --->   Operation 15 'mul' 't3' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (8.51ns)   --->   "%t5 = mul i32 %y_read, %t4" [diffeq.c:16]   --->   Operation 16 'mul' 't5' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 4.37>
ST_3 : Operation 17 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%t6 = sub i32 %u_read, %t3" [diffeq.c:17]   --->   Operation 17 'sub' 't6' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 18 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sub_ln18 = sub i32 %t6, %t5" [diffeq.c:18]   --->   Operation 18 'sub' 'sub_ln18' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 8.51>
ST_4 : Operation 19 [1/1] (8.51ns)   --->   "%t7 = mul nsw i32 %dx_read, %sub_ln18" [diffeq.c:19]   --->   Operation 19 'mul' 't7' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 2.55>
ST_5 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %x) nounwind, !map !7"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %dx) nounwind, !map !13"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %u) nounwind, !map !17"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %y) nounwind, !map !21"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !25"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @diffeq_str) nounwind"   --->   Operation 25 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 26 [1/1] (2.55ns)   --->   "%add_ln20 = add nsw i32 %y_read, %t7" [diffeq.c:20]   --->   Operation 26 'add' 'add_ln20' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 27 [1/1] (0.00ns)   --->   "ret i32 %add_ln20" [diffeq.c:21]   --->   Operation 27 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.51ns
The critical path consists of the following:
	wire read on port 'u' (diffeq.c:10) [12]  (0 ns)
	'mul' operation ('mul_ln14', diffeq.c:14) [17]  (8.51 ns)

 <State 2>: 8.51ns
The critical path consists of the following:
	wire read on port 'y' (diffeq.c:10) [11]  (0 ns)
	'mul' operation ('t5', diffeq.c:16) [21]  (8.51 ns)

 <State 3>: 4.37ns
The critical path consists of the following:
	'sub' operation ('t6', diffeq.c:17) [22]  (0 ns)
	'sub' operation ('u', diffeq.c:18) [23]  (4.37 ns)

 <State 4>: 8.51ns
The critical path consists of the following:
	'mul' operation ('t7', diffeq.c:19) [24]  (8.51 ns)

 <State 5>: 2.55ns
The critical path consists of the following:
	'add' operation ('y', diffeq.c:20) [25]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
