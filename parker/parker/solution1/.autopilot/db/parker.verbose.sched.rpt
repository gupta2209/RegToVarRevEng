

================================================================
== Vivado HLS Report for 'parker'
================================================================
* Date:           Wed Jan  6 14:00:34 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        parker
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.656 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1| 10.000 ns | 10.000 ns |    1|    1|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.65>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%in5_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in5) nounwind" [parker.c:12]   --->   Operation 3 'read' 'in5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%in4_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in4) nounwind" [parker.c:12]   --->   Operation 4 'read' 'in4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%in3_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in3) nounwind" [parker.c:12]   --->   Operation 5 'read' 'in3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%in2_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in2) nounwind" [parker.c:12]   --->   Operation 6 'read' 'in2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%in1_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in1) nounwind" [parker.c:12]   --->   Operation 7 'read' 'in1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (2.55ns)   --->   "%sub_ln21 = sub i32 0, %in3_read" [parker.c:21]   --->   Operation 8 'sub' 'sub_ln21' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (2.47ns)   --->   "%icmp_ln21 = icmp eq i32 %in2_read, %sub_ln21" [parker.c:21]   --->   Operation 9 'icmp' 'icmp_ln21' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (2.47ns)   --->   "%icmp_ln31 = icmp eq i32 %in4_read, 0" [parker.c:31]   --->   Operation 10 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (2.55ns)   --->   "%t6_3 = add nsw i32 %in2_read, %in1_read" [parker.c:32]   --->   Operation 11 'add' 't6_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (2.55ns)   --->   "%t6_4 = sub i32 0, %in2_read" [parker.c:35]   --->   Operation 12 'sub' 't6_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node t4)   --->   "%t6_5 = select i1 %icmp_ln31, i32 %t6_4, i32 %t6_3" [parker.c:31]   --->   Operation 13 'select' 't6_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (2.55ns) (out node of the LUT)   --->   "%t4 = sub nsw i32 %t6_5, %in4_read" [parker.c:37]   --->   Operation 14 'sub' 't4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (2.47ns)   --->   "%icmp_ln24 = icmp eq i32 %in1_read, 4" [parker.c:24]   --->   Operation 15 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (2.55ns)   --->   "%t4_1 = add nsw i32 %in2_read, 4" [parker.c:25]   --->   Operation 16 'add' 't4_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (2.55ns)   --->   "%t4_2 = sub nsw i32 %in3_read, %in5_read" [parker.c:27]   --->   Operation 17 'sub' 't4_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns) (grouped into LUT with out node t6_6)   --->   "%t4_3 = select i1 %icmp_ln24, i32 %t4_2, i32 %t4_1" [parker.c:24]   --->   Operation 18 'select' 't4_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node t6_6)   --->   "%t4_4 = select i1 %icmp_ln21, i32 %t4, i32 %t4_3" [parker.c:21]   --->   Operation 19 'select' 't4_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (2.55ns) (out node of the LUT)   --->   "%t6_6 = add nsw i32 %t4_4, %in4_read" [parker.c:39]   --->   Operation 20 'add' 't6_6' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.72>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in1) nounwind, !map !25"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in2) nounwind, !map !31"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in3) nounwind, !map !35"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in4) nounwind, !map !39"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in5) nounwind, !map !43"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %in6) nounwind, !map !47"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !51"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @parker_str) nounwind"   --->   Operation 28 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%in6_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %in6) nounwind" [parker.c:12]   --->   Operation 29 'read' 'in6_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (2.47ns)   --->   "%icmp_ln19 = icmp eq i32 %in5_read, 0" [parker.c:19]   --->   Operation 30 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (2.47ns)   --->   "%icmp_ln41 = icmp eq i32 %in6_read, 0" [parker.c:41]   --->   Operation 31 'icmp' 'icmp_ln41' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (2.55ns)   --->   "%t6 = add nsw i32 %in2_read, 5" [parker.c:42]   --->   Operation 32 'add' 't6' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (2.55ns)   --->   "%t6_1 = sub nsw i32 8, %in4_read" [parker.c:44]   --->   Operation 33 'sub' 't6_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln46)   --->   "%t6_2 = select i1 %icmp_ln41, i32 %t6_1, i32 %t6" [parker.c:41]   --->   Operation 34 'select' 't6_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln46)   --->   "%t6_7 = select i1 %icmp_ln19, i32 %t6_2, i32 %t6_6" [parker.c:19]   --->   Operation 35 'select' 't6_7' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (2.47ns) (out node of the LUT)   --->   "%icmp_ln46 = icmp eq i32 %t6_7, 0" [parker.c:46]   --->   Operation 36 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (2.55ns)   --->   "%out1 = add nsw i32 %in1_read, -5" [parker.c:47]   --->   Operation 37 'add' 'out1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (2.55ns)   --->   "%out1_1 = add nsw i32 %in5_read, 8" [parker.c:49]   --->   Operation 38 'add' 'out1_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.69ns)   --->   "%out1_2 = select i1 %icmp_ln46, i32 %out1_1, i32 %out1" [parker.c:46]   --->   Operation 39 'select' 'out1_2' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "ret i32 %out1_2" [parker.c:50]   --->   Operation 40 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.66ns
The critical path consists of the following:
	wire read on port 'in2' (parker.c:12) [19]  (0 ns)
	'add' operation ('t6', parker.c:32) [29]  (2.55 ns)
	'select' operation ('t6', parker.c:31) [31]  (0 ns)
	'sub' operation ('t4', parker.c:37) [32]  (2.55 ns)
	'select' operation ('t4', parker.c:21) [37]  (0 ns)
	'add' operation ('t6', parker.c:39) [38]  (2.55 ns)

 <State 2>: 5.72ns
The critical path consists of the following:
	'add' operation ('t6', parker.c:42) [23]  (2.55 ns)
	'select' operation ('t6', parker.c:41) [25]  (0 ns)
	'select' operation ('t6', parker.c:19) [39]  (0 ns)
	'icmp' operation ('icmp_ln46', parker.c:46) [40]  (2.47 ns)
	'select' operation ('out1', parker.c:46) [43]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
