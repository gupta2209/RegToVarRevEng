-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity check is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of check is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "check,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=8,HLS_SYN_FF=783,HLS_SYN_LUT=1906,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_400000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_7FFFEFFC : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111110111111111100";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_263 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100011";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal A_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal A_ce0 : STD_LOGIC;
    signal A_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal imem_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal imem_ce0 : STD_LOGIC;
    signal imem_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outData_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal outData_ce0 : STD_LOGIC;
    signal outData_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_801 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal funct_reg_1787 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_805 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_815_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_2_fu_832_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_2_reg_1706 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln136_fu_838_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_reg_1711 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln134_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pc_6_load_reg_1761 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal address_fu_878_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal address_reg_1774 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal funct_fu_882_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal pc_fu_886_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pc_reg_1791 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_893_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1796 : STD_LOGIC_VECTOR (5 downto 0);
    signal n_inst_fu_903_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_inst_reg_1800 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln152_fu_961_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln152_reg_1806 : STD_LOGIC_VECTOR (31 downto 0);
    signal rd_fu_965_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal rd_reg_1812 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_766_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal rt_reg_1952 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln260_1_fu_1175_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln260_1_reg_2008 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln257_1_fu_1184_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln257_1_reg_2018 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln213_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln213_reg_2043 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln210_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln210_reg_2048 : STD_LOGIC_VECTOR (0 downto 0);
    signal ashr_ln206_fu_1225_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln206_reg_2053 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln203_fu_1231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln203_reg_2058 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln200_fu_1237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln200_reg_2063 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln197_fu_1242_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln197_reg_2068 : STD_LOGIC_VECTOR (31 downto 0);
    signal Lo_2_fu_1326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Lo_2_reg_2073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal Hi_1_reg_2078 : STD_LOGIC_VECTOR (31 downto 0);
    signal Lo_1_fu_1354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Lo_1_reg_2083 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_reg_2088 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln164_fu_1384_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln164_reg_2093 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln161_fu_1390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln161_reg_2098 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln285_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln285_reg_2103 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln281_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln281_reg_2108 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal add_ln243_fu_1628_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln243_reg_2127 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal zext_ln299_fu_1649_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln296_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_1659_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_2143 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal icmp_ln300_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal main_result_fu_1689_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_ce0 : STD_LOGIC;
    signal reg_we0 : STD_LOGIC;
    signal reg_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_ce1 : STD_LOGIC;
    signal reg_we1 : STD_LOGIC;
    signal reg_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dmem_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dmem_ce0 : STD_LOGIC;
    signal dmem_we0 : STD_LOGIC;
    signal dmem_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dmem_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_reg_709 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln128_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_720 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal n_inst_0_reg_731 : STD_LOGIC_VECTOR (31 downto 0);
    signal main_result_0_reg_742 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_0_reg_752 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln130_fu_821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln143_fu_873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln217_fu_975_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln213_fu_980_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln213_1_fu_985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln210_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln210_1_fu_995_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln206_fu_1000_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln206_1_fu_1005_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_fu_1010_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_1_fu_1015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln200_fu_1020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_fu_1025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln194_fu_1030_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln194_1_fu_1035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln191_fu_1040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln191_1_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_fu_1050_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_1_fu_1055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln184_fu_1064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln181_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_2_fu_1083_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln168_fu_1088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln168_1_fu_1093_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln164_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln164_1_fu_1103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_fu_1108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln161_1_fu_1113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln285_fu_1118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln281_fu_1123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln276_fu_1128_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln272_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln272_1_fu_1138_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln268_fu_1143_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln268_1_fu_1148_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln264_fu_1160_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln260_fu_1165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln260_1_fu_1170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln257_fu_1179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln253_fu_1188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln250_fu_1193_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln247_fu_1198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln243_fu_1203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln213_3_fu_1251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln210_3_fu_1259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln206_2_fu_1263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_2_fu_1267_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln200_1_fu_1271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln197_1_fu_1275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln194_2_fu_1286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln191_2_fu_1297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_2_fu_1308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln164_2_fu_1396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal zext_ln161_2_fu_1400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln285_3_fu_1426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln281_2_fu_1434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln260_2_fu_1528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal zext_ln257_1_fu_1552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln257_2_fu_1557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln253_2_fu_1571_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal zext_ln250_1_fu_1603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln247_2_fu_1621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln243_1_fu_1634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal zext_ln302_fu_1665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pc_6_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln232_fu_921_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln227_fu_942_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal pc_11_fu_1457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_2_fu_1438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pc_10_fu_1478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pc_9_fu_1499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_2_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal Lo_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln264_fu_1153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln213_2_fu_1247_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln210_2_fu_1255_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln194_fu_1279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln191_fu_1290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln188_fu_1301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln285_2_fu_1422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln281_1_fu_1430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln253_fu_1564_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln247_1_fu_1616_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln136_fu_858_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln143_1_fu_863_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln232_fu_909_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal pc_2_fu_913_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln227_fu_930_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal pc_1_fu_934_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal shamt_fu_951_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_776_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal hilo_1_fu_1320_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal hilo_1_fu_1320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal hilo_1_fu_1320_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln168_fu_1340_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln168_1_fu_1344_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal hilo_fu_1348_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal hilo_fu_1348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal hilo_fu_1348_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln285_1_fu_1404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln281_fu_1413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln3_fu_1446_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln277_fu_1453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln2_fu_1467_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln273_fu_1474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1_fu_1488_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln269_fu_1495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln260_fu_1509_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln260_fu_1513_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln260_2_fu_1518_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln257_fu_1533_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln257_fu_1537_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln257_2_fu_1542_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln253_1_fu_1561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln250_fu_1575_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_1584_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln250_fu_1579_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln247_fu_1607_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln247_fu_1611_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln243_fu_1625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln299_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln302_fu_1675_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln304_fu_1679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln304_fu_1685_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal hilo_1_fu_1320_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal hilo_1_fu_1320_p10 : STD_LOGIC_VECTOR (63 downto 0);

    component check_A IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component check_imem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component check_outData IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component check_reg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component check_dmem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    A_U : component check_A
    generic map (
        DataWidth => 7,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_address0,
        ce0 => A_ce0,
        q0 => A_q0);

    imem_U : component check_imem
    generic map (
        DataWidth => 32,
        AddressRange => 44,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => imem_address0,
        ce0 => imem_ce0,
        q0 => imem_q0);

    outData_U : component check_outData
    generic map (
        DataWidth => 7,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outData_address0,
        ce0 => outData_ce0,
        q0 => outData_q0);

    reg_U : component check_reg
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => reg_address0,
        ce0 => reg_ce0,
        we0 => reg_we0,
        d0 => reg_d0,
        q0 => reg_q0,
        address1 => reg_address1,
        ce1 => reg_ce1,
        we1 => reg_we1,
        d1 => reg_d1,
        q1 => reg_q1);

    dmem_U : component check_dmem
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dmem_address0,
        ce0 => dmem_ce0,
        we0 => dmem_we0,
        d0 => dmem_d0,
        q0 => dmem_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    Hi_2_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_1_reg_1796 = ap_const_lv6_0))) then 
                Hi_2_fu_166 <= Hi_reg_2088;
            elsif (((funct_reg_1787 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_1_reg_1796 = ap_const_lv6_0))) then 
                Hi_2_fu_166 <= Hi_1_reg_2078;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln134_fu_826_p2 = ap_const_lv1_1))) then 
                Hi_2_fu_166 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    Lo_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_1_reg_1796 = ap_const_lv6_0))) then 
                Lo_fu_170 <= Lo_1_reg_2083;
            elsif (((funct_reg_1787 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state13) and (tmp_1_reg_1796 = ap_const_lv6_0))) then 
                Lo_fu_170 <= Lo_2_reg_2073;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln134_fu_826_p2 = ap_const_lv1_1))) then 
                Lo_fu_170 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_0_reg_709_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_0))) then 
                i_0_reg_709 <= i_fu_815_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_709 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i_1_reg_720_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_1_reg_720 <= i_2_reg_1706;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_1))) then 
                i_1_reg_720 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    j_0_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                j_0_reg_752 <= j_reg_2143;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln296_fu_1638_p2 = ap_const_lv1_1))) then 
                j_0_reg_752 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    main_result_0_reg_742_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                main_result_0_reg_742 <= main_result_fu_1689_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln296_fu_1638_p2 = ap_const_lv1_1))) then 
                main_result_0_reg_742 <= zext_ln299_fu_1649_p1;
            end if; 
        end if;
    end process;

    n_inst_0_reg_731_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln296_fu_1638_p2 = ap_const_lv1_0))) then 
                n_inst_0_reg_731 <= n_inst_reg_1800;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln134_fu_826_p2 = ap_const_lv1_1))) then 
                n_inst_0_reg_731 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    pc_6_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_1_reg_1796 = ap_const_lv6_4) and (grp_fu_795_p2 = ap_const_lv1_1))) then 
                pc_6_fu_162 <= pc_9_fu_1499_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_1_reg_1796 = ap_const_lv6_5) and (grp_fu_795_p2 = ap_const_lv1_0))) then 
                pc_6_fu_162 <= pc_10_fu_1478_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_1_reg_1796 = ap_const_lv6_4) and (grp_fu_795_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_1_reg_1796 = ap_const_lv6_5) and (grp_fu_795_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_1_reg_1796 = ap_const_lv6_1) and (tmp_2_fu_1438_p3 = ap_const_lv1_1)))) then 
                pc_6_fu_162 <= pc_reg_1791;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_1_reg_1796 = ap_const_lv6_1) and (tmp_2_fu_1438_p3 = ap_const_lv1_0))) then 
                pc_6_fu_162 <= pc_11_fu_1457_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                pc_6_fu_162 <= reg_q0;
            elsif (((not((tmp_1_fu_893_p4 = ap_const_lv6_F)) and not((tmp_1_fu_893_p4 = ap_const_lv6_9)) and not((tmp_1_fu_893_p4 = ap_const_lv6_C)) and not((tmp_1_fu_893_p4 = ap_const_lv6_D)) and not((tmp_1_fu_893_p4 = ap_const_lv6_E)) and not((tmp_1_fu_893_p4 = ap_const_lv6_23)) and not((tmp_1_fu_893_p4 = ap_const_lv6_2B)) and not((tmp_1_fu_893_p4 = ap_const_lv6_4)) and not((tmp_1_fu_893_p4 = ap_const_lv6_5)) and not((tmp_1_fu_893_p4 = ap_const_lv6_1)) and not((tmp_1_fu_893_p4 = ap_const_lv6_A)) and not((tmp_1_fu_893_p4 = ap_const_lv6_B)) and not((tmp_1_fu_893_p4 = ap_const_lv6_3)) and not((tmp_1_fu_893_p4 = ap_const_lv6_2)) and not((tmp_1_fu_893_p4 = ap_const_lv6_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((funct_fu_882_p1 = ap_const_lv6_10)) and not((funct_fu_882_p1 = ap_const_lv6_12)) and not((funct_fu_882_p1 = ap_const_lv6_21)) and not((funct_fu_882_p1 = ap_const_lv6_23)) and not((funct_fu_882_p1 = ap_const_lv6_18)) and not((funct_fu_882_p1 = ap_const_lv6_19)) and not((funct_fu_882_p1 = ap_const_lv6_24)) and not((funct_fu_882_p1 = ap_const_lv6_25)) and not((funct_fu_882_p1 = ap_const_lv6_26)) and not((funct_fu_882_p1 = ap_const_lv6_0)) and not((funct_fu_882_p1 = ap_const_lv6_2)) and not((funct_fu_882_p1 = ap_const_lv6_4)) and not((funct_fu_882_p1 = ap_const_lv6_6)) and not((funct_fu_882_p1 = ap_const_lv6_2A)) and not((funct_fu_882_p1 = ap_const_lv6_2B)) and not((funct_fu_882_p1 = ap_const_lv6_8)) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0)))) then 
                pc_6_fu_162 <= ap_const_lv32_0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_F)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_9)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_C)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_D)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_E)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_23)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2B)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_A)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_B)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_10)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_12)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_21)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_23)) or ((funct_fu_882_p1 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0)) or ((funct_fu_882_p1 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_24)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_25)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_26)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_4)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_6)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2A)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2B)))) then 
                pc_6_fu_162 <= pc_fu_886_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2))) then 
                pc_6_fu_162 <= zext_ln227_fu_942_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_3))) then 
                pc_6_fu_162 <= zext_ln232_fu_921_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln134_fu_826_p2 = ap_const_lv1_1))) then 
                pc_6_fu_162 <= ap_const_lv32_400000;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                Hi_1_reg_2078 <= hilo_1_fu_1320_p2(63 downto 32);
                Lo_2_reg_2073 <= Lo_2_fu_1326_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                Hi_reg_2088 <= hilo_fu_1348_p2(63 downto 32);
                Lo_1_reg_2083 <= Lo_1_fu_1354_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_21) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                add_ln161_reg_2098 <= add_ln161_fu_1390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                add_ln243_reg_2127 <= add_ln243_fu_1628_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                address_reg_1774 <= address_fu_878_p1;
                funct_reg_1787 <= funct_fu_882_p1;
                n_inst_reg_1800 <= n_inst_fu_903_p2;
                pc_reg_1791 <= pc_fu_886_p2;
                tmp_1_reg_1796 <= imem_q0(31 downto 26);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_2) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                ashr_ln200_reg_2063 <= ashr_ln200_fu_1237_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_6) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                ashr_ln206_reg_2053 <= ashr_ln206_fu_1225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_2_reg_1706 <= i_2_fu_832_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_2A) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                icmp_ln210_reg_2048 <= icmp_ln210_fu_1219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_2B) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                icmp_ln213_reg_2043 <= icmp_ln213_fu_1213_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_1_reg_1796 = ap_const_lv6_A))) then
                icmp_ln281_reg_2108 <= icmp_ln281_fu_1416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_1_reg_1796 = ap_const_lv6_B))) then
                icmp_ln285_reg_2103 <= icmp_ln285_fu_1407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                j_reg_2143 <= j_fu_1659_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                pc_6_load_reg_1761 <= pc_6_fu_162;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0))) then
                rd_reg_1812 <= imem_q0(15 downto 11);
                    zext_ln152_reg_1806(4 downto 0) <= zext_ln152_fu_961_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((funct_reg_1787 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((funct_reg_1787 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then
                reg_801 <= reg_q0;
                reg_805 <= reg_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((tmp_1_fu_893_p4 = ap_const_lv6_3)) and not((tmp_1_fu_893_p4 = ap_const_lv6_2)) and not((tmp_1_fu_893_p4 = ap_const_lv6_0)) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                rt_reg_1952 <= imem_q0(20 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                shl_ln197_reg_2068 <= shl_ln197_fu_1242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_4) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                shl_ln203_reg_2058 <= shl_ln203_fu_1231_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct_reg_1787 = ap_const_lv6_23) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                sub_ln164_reg_2093 <= sub_ln164_fu_1384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_23))) then
                trunc_ln257_1_reg_2018 <= trunc_ln257_1_fu_1184_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2B))) then
                trunc_ln260_1_reg_2008 <= trunc_ln260_1_fu_1175_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln134_fu_826_p2 = ap_const_lv1_0))) then
                    zext_ln136_reg_1711(6 downto 0) <= zext_ln136_fu_838_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln136_reg_1711(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln152_reg_1806(31 downto 5) <= "000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln134_fu_826_p2, ap_CS_fsm_state6, funct_fu_882_p1, tmp_1_fu_893_p4, ap_CS_fsm_state25, icmp_ln296_fu_1638_p2, ap_CS_fsm_state26, icmp_ln300_fu_1653_p2, icmp_ln128_fu_809_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln134_fu_826_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_9))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_1_fu_893_p4 = ap_const_lv6_C) or ((tmp_1_fu_893_p4 = ap_const_lv6_D) or (tmp_1_fu_893_p4 = ap_const_lv6_E))))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_23))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2B))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_1_fu_893_p4 = ap_const_lv6_1) or ((tmp_1_fu_893_p4 = ap_const_lv6_5) or (tmp_1_fu_893_p4 = ap_const_lv6_4))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_1_fu_893_p4 = ap_const_lv6_A) or (tmp_1_fu_893_p4 = ap_const_lv6_B)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_21)) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_23))))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (((funct_fu_882_p1 = ap_const_lv6_18) and (tmp_1_fu_893_p4 = ap_const_lv6_0)) or ((funct_fu_882_p1 = ap_const_lv6_19) and (tmp_1_fu_893_p4 = ap_const_lv6_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_25)) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_26))) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_24))))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (((((((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2A)) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2B))) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_6))) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_4))) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2))) or ((tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_8))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln296_fu_1638_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln300_fu_1653_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_address0 <= zext_ln136_fu_838_p1(3 - 1 downto 0);

    A_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_ce0 <= ap_const_logic_1;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Lo_1_fu_1354_p1 <= hilo_fu_1348_p2(32 - 1 downto 0);
    Lo_2_fu_1326_p1 <= hilo_1_fu_1320_p2(32 - 1 downto 0);
    add_ln161_fu_1390_p2 <= std_logic_vector(unsigned(reg_q1) + unsigned(reg_q0));
    add_ln243_fu_1628_p2 <= std_logic_vector(unsigned(reg_q0) + unsigned(sext_ln243_fu_1625_p1));
    add_ln257_fu_1537_p2 <= std_logic_vector(unsigned(trunc_ln257_1_reg_2018) + unsigned(trunc_ln257_fu_1533_p1));
    add_ln260_fu_1513_p2 <= std_logic_vector(unsigned(trunc_ln260_1_reg_2008) + unsigned(trunc_ln260_fu_1509_p1));
    address_fu_878_p1 <= imem_q0(16 - 1 downto 0);
    and_ln188_fu_1301_p2 <= (reg_q1 and reg_q0);
    and_ln247_fu_1611_p2 <= (trunc_ln247_fu_1607_p1 and address_reg_1774);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state26, icmp_ln300_fu_1653_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln300_fu_1653_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26, icmp_ln300_fu_1653_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln300_fu_1653_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(main_result_0_reg_742),32));
    ashr_ln200_fu_1237_p2 <= std_logic_vector(shift_right(signed(reg_q0),to_integer(unsigned('0' & zext_ln152_reg_1806(31-1 downto 0)))));
    ashr_ln206_fu_1225_p2 <= std_logic_vector(shift_right(signed(reg_q0),to_integer(unsigned('0' & reg_q1(31-1 downto 0)))));

    dmem_address0_assign_proc : process(zext_ln136_reg_1711, ap_CS_fsm_state20, ap_CS_fsm_state26, ap_CS_fsm_state4, zext_ln260_2_fu_1528_p1, ap_CS_fsm_state19, zext_ln257_1_fu_1552_p1, zext_ln302_fu_1665_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            dmem_address0 <= zext_ln302_fu_1665_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dmem_address0 <= zext_ln257_1_fu_1552_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dmem_address0 <= zext_ln260_2_fu_1528_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dmem_address0 <= zext_ln136_reg_1711(6 - 1 downto 0);
        else 
            dmem_address0 <= "XXXXXX";
        end if; 
    end process;


    dmem_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state26, ap_CS_fsm_state4, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dmem_ce0 <= ap_const_logic_1;
        else 
            dmem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_d0_assign_proc : process(reg_q0, ap_CS_fsm_state4, ap_CS_fsm_state19, sext_ln136_fu_858_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dmem_d0 <= reg_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dmem_d0 <= sext_ln136_fu_858_p1;
        else 
            dmem_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dmem_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dmem_we0 <= ap_const_logic_1;
        else 
            dmem_we0 <= ap_const_logic_0;
        end if; 
    end process;

    funct_fu_882_p1 <= imem_q0(6 - 1 downto 0);
    grp_fu_766_p4 <= imem_q0(20 downto 16);
    grp_fu_776_p4 <= imem_q0(25 downto 21);
    grp_fu_795_p2 <= "1" when (reg_q0 = reg_q1) else "0";
    hilo_1_fu_1320_p0 <= hilo_1_fu_1320_p00(32 - 1 downto 0);
    hilo_1_fu_1320_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_801),64));
    hilo_1_fu_1320_p1 <= hilo_1_fu_1320_p10(32 - 1 downto 0);
    hilo_1_fu_1320_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_805),64));
    hilo_1_fu_1320_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hilo_1_fu_1320_p0) * unsigned(hilo_1_fu_1320_p1), 64));
    hilo_fu_1348_p0 <= sext_ln168_fu_1340_p0;
    hilo_fu_1348_p1 <= sext_ln168_1_fu_1344_p0;
    hilo_fu_1348_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(hilo_fu_1348_p0) * signed(hilo_fu_1348_p1))), 64));
    i_2_fu_832_p2 <= std_logic_vector(unsigned(i_1_reg_720) + unsigned(ap_const_lv7_1));
    i_fu_815_p2 <= std_logic_vector(unsigned(i_0_reg_709) + unsigned(ap_const_lv6_1));
    icmp_ln128_fu_809_p2 <= "1" when (i_0_reg_709 = ap_const_lv6_20) else "0";
    icmp_ln134_fu_826_p2 <= "1" when (i_1_reg_720 = ap_const_lv7_40) else "0";
    icmp_ln210_fu_1219_p2 <= "1" when (signed(reg_q0) < signed(reg_q1)) else "0";
    icmp_ln213_fu_1213_p2 <= "1" when (unsigned(reg_q0) < unsigned(reg_q1)) else "0";
    icmp_ln281_fu_1416_p2 <= "1" when (signed(reg_q0) < signed(sext_ln281_fu_1413_p1)) else "0";
    icmp_ln285_fu_1407_p2 <= "1" when (unsigned(reg_q0) < unsigned(zext_ln285_1_fu_1404_p1)) else "0";
    icmp_ln296_fu_1638_p2 <= "1" when (pc_6_fu_162 = ap_const_lv32_0) else "0";
    icmp_ln299_fu_1644_p2 <= "0" when (n_inst_reg_1800 = ap_const_lv32_263) else "1";
    icmp_ln300_fu_1653_p2 <= "1" when (j_0_reg_752 = ap_const_lv4_8) else "0";
    icmp_ln304_fu_1679_p2 <= "0" when (dmem_q0 = sext_ln302_fu_1675_p1) else "1";
    imem_address0 <= zext_ln143_fu_873_p1(6 - 1 downto 0);

    imem_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            imem_ce0 <= ap_const_logic_1;
        else 
            imem_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_1659_p2 <= std_logic_vector(unsigned(j_0_reg_752) + unsigned(ap_const_lv4_1));
    main_result_fu_1689_p2 <= std_logic_vector(unsigned(zext_ln304_fu_1685_p1) + unsigned(main_result_0_reg_742));
    n_inst_fu_903_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(n_inst_0_reg_731));
    or_ln191_fu_1290_p2 <= (reg_q1 or reg_q0);
    or_ln250_fu_1579_p2 <= (trunc_ln250_fu_1575_p1 or address_reg_1774);
    or_ln_fu_1594_p3 <= (tmp_fu_1584_p4 & or_ln250_fu_1579_p2);
    outData_address0 <= zext_ln302_fu_1665_p1(3 - 1 downto 0);

    outData_ce0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            outData_ce0 <= ap_const_logic_1;
        else 
            outData_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pc_10_fu_1478_p2 <= std_logic_vector(unsigned(pc_6_load_reg_1761) + unsigned(sext_ln273_fu_1474_p1));
    pc_11_fu_1457_p2 <= std_logic_vector(unsigned(pc_6_load_reg_1761) + unsigned(sext_ln277_fu_1453_p1));
    pc_1_fu_934_p3 <= (trunc_ln227_fu_930_p1 & ap_const_lv2_0);
    pc_2_fu_913_p3 <= (trunc_ln232_fu_909_p1 & ap_const_lv2_0);
    pc_9_fu_1499_p2 <= std_logic_vector(unsigned(pc_6_load_reg_1761) + unsigned(sext_ln269_fu_1495_p1));
    pc_fu_886_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(pc_6_load_reg_1761));
    rd_fu_965_p4 <= imem_q0(15 downto 11);

    reg_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, funct_fu_882_p1, tmp_1_fu_893_p4, icmp_ln128_fu_809_p2, zext_ln130_fu_821_p1, zext_ln217_fu_975_p1, zext_ln213_fu_980_p1, zext_ln210_fu_990_p1, zext_ln206_fu_1000_p1, zext_ln203_fu_1010_p1, zext_ln200_fu_1020_p1, zext_ln197_fu_1025_p1, zext_ln194_fu_1030_p1, zext_ln191_fu_1040_p1, zext_ln188_fu_1050_p1, zext_ln184_fu_1064_p1, zext_ln181_fu_1073_p1, zext_ln173_fu_1078_p1, zext_ln168_fu_1088_p1, zext_ln164_fu_1098_p1, zext_ln161_fu_1108_p1, zext_ln285_fu_1118_p1, zext_ln281_fu_1123_p1, zext_ln276_fu_1128_p1, zext_ln272_fu_1133_p1, zext_ln268_fu_1143_p1, zext_ln264_fu_1160_p1, zext_ln260_fu_1165_p1, zext_ln257_fu_1179_p1, zext_ln253_fu_1188_p1, zext_ln250_fu_1193_p1, zext_ln247_fu_1198_p1, zext_ln243_fu_1203_p1, zext_ln243_1_fu_1634_p1, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            reg_address0 <= zext_ln243_1_fu_1634_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_9))) then 
            reg_address0 <= zext_ln243_fu_1203_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_C))) then 
            reg_address0 <= zext_ln247_fu_1198_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_D))) then 
            reg_address0 <= zext_ln250_fu_1193_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_E))) then 
            reg_address0 <= zext_ln253_fu_1188_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_23))) then 
            reg_address0 <= zext_ln257_fu_1179_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2B))) then 
            reg_address0 <= zext_ln260_fu_1165_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_F))) then 
            reg_address0 <= zext_ln264_fu_1160_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_4))) then 
            reg_address0 <= zext_ln268_fu_1143_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_5))) then 
            reg_address0 <= zext_ln272_fu_1133_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_1))) then 
            reg_address0 <= zext_ln276_fu_1128_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_A))) then 
            reg_address0 <= zext_ln281_fu_1123_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_B))) then 
            reg_address0 <= zext_ln285_fu_1118_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_21))) then 
            reg_address0 <= zext_ln161_fu_1108_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_23))) then 
            reg_address0 <= zext_ln164_fu_1098_p1(5 - 1 downto 0);
        elsif (((funct_fu_882_p1 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0))) then 
            reg_address0 <= zext_ln168_fu_1088_p1(5 - 1 downto 0);
        elsif (((funct_fu_882_p1 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0))) then 
            reg_address0 <= zext_ln173_fu_1078_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_10))) then 
            reg_address0 <= zext_ln181_fu_1073_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_12))) then 
            reg_address0 <= zext_ln184_fu_1064_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_24))) then 
            reg_address0 <= zext_ln188_fu_1050_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_25))) then 
            reg_address0 <= zext_ln191_fu_1040_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_26))) then 
            reg_address0 <= zext_ln194_fu_1030_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_0))) then 
            reg_address0 <= zext_ln197_fu_1025_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2))) then 
            reg_address0 <= zext_ln200_fu_1020_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_4))) then 
            reg_address0 <= zext_ln203_fu_1010_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_6))) then 
            reg_address0 <= zext_ln206_fu_1000_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2A))) then 
            reg_address0 <= zext_ln210_fu_990_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2B))) then 
            reg_address0 <= zext_ln213_fu_980_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_8))) then 
            reg_address0 <= zext_ln217_fu_975_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_3))) then 
            reg_address0 <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_1))) then 
            reg_address0 <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_0))) then 
            reg_address0 <= zext_ln130_fu_821_p1(5 - 1 downto 0);
        else 
            reg_address0 <= "XXXXX";
        end if; 
    end process;


    reg_address1_assign_proc : process(funct_reg_1787, ap_CS_fsm_state6, funct_fu_882_p1, tmp_1_fu_893_p4, tmp_1_reg_1796, ap_CS_fsm_state25, zext_ln213_1_fu_985_p1, zext_ln210_1_fu_995_p1, zext_ln206_1_fu_1005_p1, zext_ln203_1_fu_1015_p1, zext_ln194_1_fu_1035_p1, zext_ln191_1_fu_1045_p1, zext_ln188_1_fu_1055_p1, zext_ln173_2_fu_1083_p1, zext_ln168_1_fu_1093_p1, zext_ln164_1_fu_1103_p1, zext_ln161_1_fu_1113_p1, zext_ln272_1_fu_1138_p1, zext_ln268_1_fu_1148_p1, zext_ln260_1_fu_1170_p1, zext_ln213_3_fu_1251_p1, ap_CS_fsm_state9, zext_ln210_3_fu_1259_p1, zext_ln206_2_fu_1263_p1, zext_ln203_2_fu_1267_p1, zext_ln200_1_fu_1271_p1, zext_ln197_1_fu_1275_p1, zext_ln194_2_fu_1286_p1, ap_CS_fsm_state10, zext_ln191_2_fu_1297_p1, zext_ln188_2_fu_1308_p1, zext_ln164_2_fu_1396_p1, ap_CS_fsm_state15, zext_ln161_2_fu_1400_p1, zext_ln285_3_fu_1426_p1, ap_CS_fsm_state17, zext_ln281_2_fu_1434_p1, zext_ln257_2_fu_1557_p1, ap_CS_fsm_state21, zext_ln253_2_fu_1571_p1, ap_CS_fsm_state22, zext_ln250_1_fu_1603_p1, zext_ln247_2_fu_1621_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            reg_address1 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_C))) then 
            reg_address1 <= zext_ln247_2_fu_1621_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_D))) then 
            reg_address1 <= zext_ln250_1_fu_1603_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_E))) then 
            reg_address1 <= zext_ln253_2_fu_1571_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            reg_address1 <= zext_ln257_2_fu_1557_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_A))) then 
            reg_address1 <= zext_ln281_2_fu_1434_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_B))) then 
            reg_address1 <= zext_ln285_3_fu_1426_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_21) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            reg_address1 <= zext_ln161_2_fu_1400_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_23) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            reg_address1 <= zext_ln164_2_fu_1396_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_24) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            reg_address1 <= zext_ln188_2_fu_1308_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_25) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            reg_address1 <= zext_ln191_2_fu_1297_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_26) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            reg_address1 <= zext_ln194_2_fu_1286_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_address1 <= zext_ln197_1_fu_1275_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_2) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_address1 <= zext_ln200_1_fu_1271_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_4) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_address1 <= zext_ln203_2_fu_1267_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_6) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_address1 <= zext_ln206_2_fu_1263_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_2A) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_address1 <= zext_ln210_3_fu_1259_p1(5 - 1 downto 0);
        elsif (((funct_reg_1787 = ap_const_lv6_2B) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_address1 <= zext_ln213_3_fu_1251_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2B))) then 
            reg_address1 <= zext_ln260_1_fu_1170_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_4))) then 
            reg_address1 <= zext_ln268_1_fu_1148_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_5))) then 
            reg_address1 <= zext_ln272_1_fu_1138_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_21))) then 
            reg_address1 <= zext_ln161_1_fu_1113_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_23))) then 
            reg_address1 <= zext_ln164_1_fu_1103_p1(5 - 1 downto 0);
        elsif (((funct_fu_882_p1 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0))) then 
            reg_address1 <= zext_ln168_1_fu_1093_p1(5 - 1 downto 0);
        elsif (((funct_fu_882_p1 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0))) then 
            reg_address1 <= zext_ln173_2_fu_1083_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_24))) then 
            reg_address1 <= zext_ln188_1_fu_1055_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_25))) then 
            reg_address1 <= zext_ln191_1_fu_1045_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_26))) then 
            reg_address1 <= zext_ln194_1_fu_1035_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_4))) then 
            reg_address1 <= zext_ln203_1_fu_1015_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_6))) then 
            reg_address1 <= zext_ln206_1_fu_1005_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2A))) then 
            reg_address1 <= zext_ln210_1_fu_995_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2B))) then 
            reg_address1 <= zext_ln213_1_fu_985_p1(5 - 1 downto 0);
        else 
            reg_address1 <= "XXXXX";
        end if; 
    end process;


    reg_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, funct_fu_882_p1, tmp_1_fu_893_p4, icmp_ln128_fu_809_p2, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_F)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_9)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_C)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_D)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_E)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_23)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2B)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_4)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_5)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_A)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_B)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_3)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_10)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_12)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_21)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_23)) or ((funct_fu_882_p1 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0)) or ((funct_fu_882_p1 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_24)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_25)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_26)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_4)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_6)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2A)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2B)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_8)))) then 
            reg_ce0 <= ap_const_logic_1;
        else 
            reg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    reg_ce1_assign_proc : process(funct_reg_1787, ap_CS_fsm_state6, funct_fu_882_p1, tmp_1_fu_893_p4, tmp_1_reg_1796, ap_CS_fsm_state25, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_C)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_D)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_E)) or ((funct_reg_1787 = ap_const_lv6_24) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((funct_reg_1787 = ap_const_lv6_25) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((funct_reg_1787 = ap_const_lv6_26) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_A)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_B)) or ((funct_reg_1787 = ap_const_lv6_21) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((funct_reg_1787 = ap_const_lv6_23) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((funct_reg_1787 = ap_const_lv6_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_2) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_4) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_6) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_2A) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_2B) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_2B)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_4)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_5)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_21)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_23)) or ((funct_fu_882_p1 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0)) or ((funct_fu_882_p1 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_24)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_25)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_26)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_4)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_6)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2A)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_2B)))) then 
            reg_ce1 <= ap_const_logic_1;
        else 
            reg_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    reg_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, funct_fu_882_p1, pc_fu_886_p2, tmp_1_fu_893_p4, add_ln243_reg_2127, icmp_ln128_fu_809_p2, ap_CS_fsm_state24, Hi_2_fu_166, Lo_fu_170, shl_ln264_fu_1153_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            reg_d0 <= add_ln243_reg_2127;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_F))) then 
            reg_d0 <= shl_ln264_fu_1153_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_10))) then 
            reg_d0 <= Hi_2_fu_166;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_12))) then 
            reg_d0 <= Lo_fu_170;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_3))) then 
            reg_d0 <= pc_fu_886_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_1))) then 
            reg_d0 <= ap_const_lv32_7FFFEFFC;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_0))) then 
            reg_d0 <= ap_const_lv32_0;
        else 
            reg_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    reg_d1_assign_proc : process(funct_reg_1787, tmp_1_reg_1796, ashr_ln206_reg_2053, shl_ln203_reg_2058, ashr_ln200_reg_2063, shl_ln197_reg_2068, sub_ln164_reg_2093, add_ln161_reg_2098, ap_CS_fsm_state25, dmem_q0, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state22, zext_ln213_2_fu_1247_p1, zext_ln210_2_fu_1255_p1, xor_ln194_fu_1279_p2, or_ln191_fu_1290_p2, and_ln188_fu_1301_p2, zext_ln285_2_fu_1422_p1, zext_ln281_1_fu_1430_p1, xor_ln253_fu_1564_p2, or_ln_fu_1594_p3, zext_ln247_1_fu_1616_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            reg_d1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_C))) then 
            reg_d1 <= zext_ln247_1_fu_1616_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_D))) then 
            reg_d1 <= or_ln_fu_1594_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_E))) then 
            reg_d1 <= xor_ln253_fu_1564_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            reg_d1 <= dmem_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_A))) then 
            reg_d1 <= zext_ln281_1_fu_1430_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_B))) then 
            reg_d1 <= zext_ln285_2_fu_1422_p1;
        elsif (((funct_reg_1787 = ap_const_lv6_21) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            reg_d1 <= add_ln161_reg_2098;
        elsif (((funct_reg_1787 = ap_const_lv6_23) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            reg_d1 <= sub_ln164_reg_2093;
        elsif (((funct_reg_1787 = ap_const_lv6_24) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            reg_d1 <= and_ln188_fu_1301_p2;
        elsif (((funct_reg_1787 = ap_const_lv6_25) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            reg_d1 <= or_ln191_fu_1290_p2;
        elsif (((funct_reg_1787 = ap_const_lv6_26) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            reg_d1 <= xor_ln194_fu_1279_p2;
        elsif (((funct_reg_1787 = ap_const_lv6_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_d1 <= shl_ln197_reg_2068;
        elsif (((funct_reg_1787 = ap_const_lv6_2) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_d1 <= ashr_ln200_reg_2063;
        elsif (((funct_reg_1787 = ap_const_lv6_4) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_d1 <= shl_ln203_reg_2058;
        elsif (((funct_reg_1787 = ap_const_lv6_6) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_d1 <= ashr_ln206_reg_2053;
        elsif (((funct_reg_1787 = ap_const_lv6_2A) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_d1 <= zext_ln210_2_fu_1255_p1;
        elsif (((funct_reg_1787 = ap_const_lv6_2B) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            reg_d1 <= zext_ln213_2_fu_1247_p1;
        else 
            reg_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    reg_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state6, funct_fu_882_p1, tmp_1_fu_893_p4, icmp_ln128_fu_809_p2, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln128_fu_809_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_F)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_3)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_10)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_fu_893_p4 = ap_const_lv6_0) and (funct_fu_882_p1 = ap_const_lv6_12)))) then 
            reg_we0 <= ap_const_logic_1;
        else 
            reg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    reg_we1_assign_proc : process(funct_reg_1787, tmp_1_reg_1796, ap_CS_fsm_state25, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state15, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_C)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_D)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (tmp_1_reg_1796 = ap_const_lv6_E)) or ((funct_reg_1787 = ap_const_lv6_24) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((funct_reg_1787 = ap_const_lv6_25) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((funct_reg_1787 = ap_const_lv6_26) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_A)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_1_reg_1796 = ap_const_lv6_B)) or ((funct_reg_1787 = ap_const_lv6_21) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((funct_reg_1787 = ap_const_lv6_23) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((funct_reg_1787 = ap_const_lv6_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_2) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_4) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_6) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_2A) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((funct_reg_1787 = ap_const_lv6_2B) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            reg_we1 <= ap_const_logic_1;
        else 
            reg_we1 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln136_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(A_q0),32));

    sext_ln168_1_fu_1344_p0 <= reg_805;
    sext_ln168_fu_1340_p0 <= reg_801;
        sext_ln243_fu_1625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(address_reg_1774),32));

        sext_ln269_fu_1495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_1488_p3),32));

        sext_ln273_fu_1474_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_1467_p3),32));

        sext_ln277_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_fu_1446_p3),32));

        sext_ln281_fu_1413_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(address_reg_1774),32));

        sext_ln302_fu_1675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(outData_q0),32));

    shamt_fu_951_p4 <= imem_q0(10 downto 6);
    shl_ln197_fu_1242_p2 <= std_logic_vector(shift_left(unsigned(reg_q0),to_integer(unsigned('0' & zext_ln152_reg_1806(31-1 downto 0)))));
    shl_ln1_fu_1488_p3 <= (address_reg_1774 & ap_const_lv2_0);
    shl_ln203_fu_1231_p2 <= std_logic_vector(shift_left(unsigned(reg_q0),to_integer(unsigned('0' & reg_q1(31-1 downto 0)))));
    shl_ln264_fu_1153_p2 <= std_logic_vector(shift_left(unsigned(imem_q0),to_integer(unsigned('0' & ap_const_lv32_10(31-1 downto 0)))));
    shl_ln2_fu_1467_p3 <= (address_reg_1774 & ap_const_lv2_0);
    shl_ln3_fu_1446_p3 <= (address_reg_1774 & ap_const_lv2_0);
    sub_ln164_fu_1384_p2 <= std_logic_vector(unsigned(reg_q0) - unsigned(reg_q1));
    tmp_1_fu_893_p4 <= imem_q0(31 downto 26);
    tmp_2_fu_1438_p3 <= reg_q0(31 downto 31);
    tmp_fu_1584_p4 <= reg_q0(31 downto 16);
    trunc_ln143_1_fu_863_p4 <= pc_6_fu_162(7 downto 2);
    trunc_ln227_fu_930_p1 <= imem_q0(26 - 1 downto 0);
    trunc_ln232_fu_909_p1 <= imem_q0(26 - 1 downto 0);
    trunc_ln247_fu_1607_p1 <= reg_q0(16 - 1 downto 0);
    trunc_ln250_fu_1575_p1 <= reg_q0(16 - 1 downto 0);
    trunc_ln257_1_fu_1184_p1 <= imem_q0(8 - 1 downto 0);
    trunc_ln257_2_fu_1542_p4 <= add_ln257_fu_1537_p2(7 downto 2);
    trunc_ln257_fu_1533_p1 <= reg_q0(8 - 1 downto 0);
    trunc_ln260_1_fu_1175_p1 <= imem_q0(8 - 1 downto 0);
    trunc_ln260_2_fu_1518_p4 <= add_ln260_fu_1513_p2(7 downto 2);
    trunc_ln260_fu_1509_p1 <= reg_q1(8 - 1 downto 0);
    xor_ln194_fu_1279_p2 <= (reg_q1 xor reg_q0);
    xor_ln253_fu_1564_p2 <= (zext_ln253_1_fu_1561_p1 xor reg_q0);
    zext_ln130_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_709),64));
    zext_ln136_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_720),64));
    zext_ln143_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln143_1_fu_863_p4),64));
    zext_ln152_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shamt_fu_951_p4),32));
    zext_ln161_1_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln161_2_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln161_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln164_1_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln164_2_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln164_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln168_1_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln168_fu_1088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln173_2_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln173_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln181_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_fu_965_p4),64));
    zext_ln184_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_fu_965_p4),64));
    zext_ln188_1_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln188_2_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln188_fu_1050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln191_1_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln191_2_fu_1297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln191_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln194_1_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln194_2_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln194_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln197_1_fu_1275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln197_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln200_1_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln200_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln203_1_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln203_2_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln203_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln206_1_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln206_2_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln206_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln210_1_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln210_2_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln210_reg_2048),32));
    zext_ln210_3_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln210_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln213_1_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln213_2_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln213_reg_2043),32));
    zext_ln213_3_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1812),64));
    zext_ln213_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln217_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln227_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc_1_fu_934_p3),32));
    zext_ln232_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pc_2_fu_913_p3),32));
    zext_ln243_1_fu_1634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rt_reg_1952),64));
    zext_ln243_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln247_1_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln247_fu_1611_p2),32));
    zext_ln247_2_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rt_reg_1952),64));
    zext_ln247_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln250_1_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rt_reg_1952),64));
    zext_ln250_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln253_1_fu_1561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(address_reg_1774),32));
    zext_ln253_2_fu_1571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rt_reg_1952),64));
    zext_ln253_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln257_1_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln257_2_fu_1542_p4),64));
    zext_ln257_2_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rt_reg_1952),64));
    zext_ln257_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln260_1_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln260_2_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln260_2_fu_1518_p4),64));
    zext_ln260_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln264_fu_1160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln268_1_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln268_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln272_1_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_766_p4),64));
    zext_ln272_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln276_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln281_1_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln281_reg_2108),32));
    zext_ln281_2_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rt_reg_1952),64));
    zext_ln281_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln285_1_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(address_reg_1774),32));
    zext_ln285_2_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln285_reg_2103),32));
    zext_ln285_3_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rt_reg_1952),64));
    zext_ln285_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_776_p4),64));
    zext_ln299_fu_1649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln299_fu_1644_p2),4));
    zext_ln302_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_752),64));
    zext_ln304_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln304_fu_1679_p2),4));
end behav;
