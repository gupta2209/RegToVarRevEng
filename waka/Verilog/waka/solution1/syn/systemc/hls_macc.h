// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hls_macc_HH_
#define _hls_macc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct hls_macc : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in1;
    sc_in< sc_lv<32> > in2;
    sc_in< sc_lv<32> > in3;
    sc_in< sc_lv<32> > in4;
    sc_in< sc_lv<32> > in7;
    sc_in< sc_lv<32> > in8;
    sc_in< sc_lv<32> > in9;
    sc_in< sc_lv<32> > in10;
    sc_in< sc_lv<32> > in14;
    sc_in< sc_lv<32> > in12;
    sc_in< sc_lv<32> > in15;
    sc_in< sc_lv<32> > in17;
    sc_in< sc_lv<32> > in19;
    sc_in< sc_lv<32> > in20;
    sc_in< sc_lv<32> > in22;
    sc_in< sc_lv<32> > in24;
    sc_in< sc_lv<32> > in27;
    sc_in< sc_lv<32> > in28;
    sc_in< sc_lv<32> > in29;
    sc_in< sc_lv<32> > in32;
    sc_out< sc_lv<32> > out13;
    sc_out< sc_logic > out13_ap_vld;
    sc_in< sc_lv<32> > out30_i;
    sc_out< sc_lv<32> > out30_o;
    sc_out< sc_logic > out30_o_ap_vld;
    sc_out< sc_lv<32> > out31;
    sc_out< sc_logic > out31_ap_vld;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    hls_macc(sc_module_name name);
    SC_HAS_PROCESS(hls_macc);

    ~hls_macc();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > sub_ln11_fu_222_p2;
    sc_signal< sc_lv<32> > sub_ln11_reg_351;
    sc_signal< sc_lv<1> > icmp_ln13_fu_241_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_356;
    sc_signal< sc_lv<1> > icmp_ln18_fu_247_p2;
    sc_signal< sc_lv<1> > icmp_ln18_reg_360;
    sc_signal< sc_lv<32> > t23_fu_259_p2;
    sc_signal< sc_lv<32> > t23_reg_365;
    sc_signal< sc_lv<32> > t26_1_fu_271_p2;
    sc_signal< sc_lv<32> > t26_1_reg_370;
    sc_signal< sc_lv<32> > t16_fu_277_p2;
    sc_signal< sc_lv<32> > t16_1_fu_298_p2;
    sc_signal< sc_lv<32> > t16_1_reg_380;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > ap_phi_mux_t16_0_phi_fu_210_p4;
    sc_signal< sc_lv<32> > t16_0_reg_207;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > add_ln28_fu_303_p2;
    sc_signal< sc_lv<32> > add_ln30_fu_309_p2;
    sc_signal< sc_lv<32> > add_ln12_fu_229_p2;
    sc_signal< sc_lv<32> > t5_fu_216_p2;
    sc_signal< sc_lv<32> > add_ln21_fu_253_p2;
    sc_signal< sc_lv<32> > t11_fu_235_p2;
    sc_signal< sc_lv<32> > add_ln26_fu_265_p2;
    sc_signal< sc_lv<32> > t25_fu_283_p2;
    sc_signal< sc_lv<32> > t26_fu_287_p2;
    sc_signal< sc_lv<32> > t26_2_fu_292_p3;
    sc_signal< sc_lv<32> > add_ln31_fu_315_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_229_p2();
    void thread_add_ln21_fu_253_p2();
    void thread_add_ln26_fu_265_p2();
    void thread_add_ln28_fu_303_p2();
    void thread_add_ln30_fu_309_p2();
    void thread_add_ln31_fu_315_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_t16_0_phi_fu_210_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_ln13_fu_241_p2();
    void thread_icmp_ln18_fu_247_p2();
    void thread_out13();
    void thread_out13_ap_vld();
    void thread_out30_o();
    void thread_out30_o_ap_vld();
    void thread_out31();
    void thread_out31_ap_vld();
    void thread_sub_ln11_fu_222_p2();
    void thread_t11_fu_235_p2();
    void thread_t16_1_fu_298_p2();
    void thread_t16_fu_277_p2();
    void thread_t23_fu_259_p2();
    void thread_t25_fu_283_p2();
    void thread_t26_1_fu_271_p2();
    void thread_t26_2_fu_292_p3();
    void thread_t26_fu_287_p2();
    void thread_t5_fu_216_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
